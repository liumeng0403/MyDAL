

发包测试：
    项目: MyDAL.Tools 
    项目: MyDAL.SqlAction 
    项目: MyDAL.WhereEdge 
    项目: MyDAL.QueryAPI 
    项目: MyDAL.Func 
    项目: Functions
    项目: MyDAL.CsFunc 	
    项目: MyDAL.Compare 
    项目: MyDAL.Update 
    项目: MyDAL.Delete 
    项目: MyDAL.Create 






思路调整：

首要一：  
//添加支持   to string   同时 XFunction 
                .SelectList(it=>new DicItem
                {
                    text = it.description,
                    value = it.testMathId.ToString()
                });


1、解析支持原生 mysql 函数
2、抛弃 .count() sum() 等 api 做法
3、select  sum(ifnull(`air`.`TotalSaleCount`,0)) -- 去除 ifnull 函数 ， 在 mysql 中 sum ： null ，1 = 1 
  from `agent` as `a`
           inner join `agentinventoryrecord` as `air`
                      on `a`.`Id`=`air`.`AgentId`
  where  `a`.`AgentLevel`=128;
4、sql 语句做法为小数据量型系统 API
5、lambda api 做法为大、中数据量型系统 API
6、


        // datetime? tostring 方法

        // 自然 sql 命名 , select insert update delete 

       


// .AndSql(string sql) 支持 
// .OrSql(string sql) 支持

// mysql 原生 md5 功能   set/where/select 
// where 后 需要有 where-segment , 单表 && join

// IDGenerator api  名字改进  NewID()
// data-center and data-worker 参数

// 固化 where equals 方法 case 

// 支持 mysql 关闭 information-schema 时, 可正常运行

// MAUI entity-auto-generator

// paging 需要支持 limit start 
// tool 方法注释
// paging long total 
// 兼容 where = where.xxx()  和 自然的 where.xxx().yyy()





