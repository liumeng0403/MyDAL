

项目: MyDAL.Tools 
项目: MyDAL.SqlAction 
项目: MyDAL.WhereEdge 
项目: MyDAL.QueryAPI 
项目: MyDAL.Func 
项目: Functions
项目: MyDAL.CsFunc 	
项目: MyDAL.Compare 
项目: MyDAL.Update 
项目: MyDAL.Delete 
项目: MyDAL.Create 



思路调整：
1、解析支持原生 mysql 函数
2、抛弃 .count() 等 api 做法
3、抛弃 async api 做法 
4、sql 语句做法为小数据量型系统 API
5、lambda api 做法为大、中数据量型系统 API
6、lambda join api 只保留两表 join  


        // datetime? tostring 方法

        // 自然 sql 命名 , select insert update delete 

        // create 返回 实体 , 支持自增 主键 携带返回      


// .AndSql(string sql) 支持 
// .OrSql(string sql) 支持

// mysql 原生 md5 功能   set/where/select 
// where 后 需要有 where-segment , 单表 && join

// IDGenerator api  名字改进  NewID()
// data-center and data-worker 参数

// 固化 where equals 方法 case 

// 支持 mysql 关闭 information-schema 时, 可正常运行

// MAUI entity-auto-generator

// paging 需要支持 limit start 
// tool 方法注释
// paging long total 
// 兼容 where = where.xxx()  和 自然的 where.xxx().yyy()



//添加支持   to string 
                .SelectList(it=>new DicItem
                {
                    text = it.description,
                    value = it.testMathId.ToString()
                });

